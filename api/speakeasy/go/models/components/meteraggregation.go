// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// MeterAggregation - The aggregation type to use for the meter.
type MeterAggregation string

const (
	MeterAggregationSum   MeterAggregation = "SUM"
	MeterAggregationCount MeterAggregation = "COUNT"
	MeterAggregationAvg   MeterAggregation = "AVG"
	MeterAggregationMin   MeterAggregation = "MIN"
	MeterAggregationMax   MeterAggregation = "MAX"
)

func (e MeterAggregation) ToPointer() *MeterAggregation {
	return &e
}

func (e *MeterAggregation) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUM":
		fallthrough
	case "COUNT":
		fallthrough
	case "AVG":
		fallthrough
	case "MIN":
		fallthrough
	case "MAX":
		*e = MeterAggregation(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MeterAggregation: %v", v)
	}
}
