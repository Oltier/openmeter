// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

type MeterInput struct {
	// A unique identifier for the meter.
	Slug string `json:"slug"`
	// A description of the meter.
	Description *string `json:"description,omitempty"`
	// The aggregation type to use for the meter.
	Aggregation MeterAggregation `json:"aggregation"`
	// Aggregation window size.
	WindowSize WindowSize `json:"windowSize"`
	// The event type to aggregate.
	EventType string `json:"eventType"`
	// JSONPath expression to extract the value from the event data.
	ValueProperty *string `json:"valueProperty,omitempty"`
	// Named JSONPath expressions to extract the group by values from the event data.
	GroupBy map[string]string `json:"groupBy,omitempty"`
}

func (o *MeterInput) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *MeterInput) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *MeterInput) GetAggregation() MeterAggregation {
	if o == nil {
		return MeterAggregation("")
	}
	return o.Aggregation
}

func (o *MeterInput) GetWindowSize() WindowSize {
	if o == nil {
		return WindowSize("")
	}
	return o.WindowSize
}

func (o *MeterInput) GetEventType() string {
	if o == nil {
		return ""
	}
	return o.EventType
}

func (o *MeterInput) GetValueProperty() *string {
	if o == nil {
		return nil
	}
	return o.ValueProperty
}

func (o *MeterInput) GetGroupBy() map[string]string {
	if o == nil {
		return nil
	}
	return o.GroupBy
}
