// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"openapi/internal/utils"
	"time"
)

type PortalToken struct {
	Subject           string    `json:"subject"`
	ExpiresAt         time.Time `json:"expiresAt"`
	Token             string    `json:"token"`
	AllowedMeterSlugs []string  `json:"allowedMeterSlugs,omitempty"`
}

func (p PortalToken) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PortalToken) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PortalToken) GetSubject() string {
	if o == nil {
		return ""
	}
	return o.Subject
}

func (o *PortalToken) GetExpiresAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ExpiresAt
}

func (o *PortalToken) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *PortalToken) GetAllowedMeterSlugs() []string {
	if o == nil {
		return nil
	}
	return o.AllowedMeterSlugs
}
